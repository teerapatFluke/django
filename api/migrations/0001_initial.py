# Generated by Django 3.2.5 on 2021-12-05 14:33

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_name', models.CharField(max_length=150, unique=True)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('user_picture', models.CharField(blank=True, max_length=150)),
                ('start_date', models.DateTimeField(default=datetime.date.today)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('expo_noti', models.CharField(blank=True, max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AmazonKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessKey', models.CharField(max_length=100)),
                ('secretKey', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_name_TH', models.CharField(max_length=50)),
                ('artist_name_EN', models.CharField(max_length=50)),
                ('artist_picture', models.CharField(blank=True, max_length=200)),
                ('artist_follow', models.IntegerField(default=0)),
                ('date_add', models.DateField(default=datetime.date.today)),
                ('chat_url', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Promoter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.IntegerField(default=1)),
                ('detail', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('mapname', models.CharField(blank=True, max_length=150)),
                ('mapurl', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_header', models.CharField(max_length=50)),
                ('request_type', models.IntegerField(default=1)),
                ('request_detail', models.TextField()),
                ('request_date', models.DateField(default=datetime.date.today)),
                ('request_read', models.IntegerField(default=0)),
                ('newuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_head', models.CharField(default='no_head', max_length=50)),
                ('problem_detail', models.TextField(default='no_detail')),
                ('problem_date', models.DateField(default=datetime.date.today)),
                ('problem_read', models.IntegerField(default=0)),
                ('newuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100)),
                ('date', models.DateField(default=datetime.date.today)),
                ('date_lastupdate', models.DateField(default=datetime.date.today)),
                ('show_day', models.DateField(blank=True, null=True)),
                ('end_day', models.DateField(blank=True, null=True)),
                ('ticket_open', models.DateField(blank=True, null=True)),
                ('ticket_price', models.CharField(blank=True, max_length=50)),
                ('ticket_price_end', models.CharField(blank=True, max_length=50, null=True)),
                ('detail_update', models.CharField(default='เพิ่มข้อมูลเข้าสู่ระบบ', max_length=50)),
                ('event_follower', models.IntegerField(default=0)),
                ('complete', models.IntegerField(default=0)),
                ('artistpost', models.ManyToManyField(blank=True, to='api.Artist')),
                ('promoter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.promoter')),
                ('ticketpost', models.ManyToManyField(blank=True, to='api.Ticket')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.venue')),
            ],
        ),
        migrations.CreateModel(
            name='Noification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('body', models.CharField(max_length=100)),
                ('date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.event')),
            ],
            options={
                'unique_together': {('event', 'date')},
            },
        ),
        migrations.CreateModel(
            name='EventFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'event')},
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('artist', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ArtistFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.artist')),
                ('newuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('newuser', 'artist')},
            },
        ),
    ]
